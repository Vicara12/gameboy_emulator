#ifndef INSTRUCTION_SET_VEC_H_
#define INSTRUCTION_SET_VEC_H_

#include "instructions.h"
#include "load_instructions.h"
#include "arithmetic_instructions.h"
#include "other_instructions.h"
#include "shift_instructions.h"


// instruction for each address
Instruction* instruction_set [0x100] =
{
/* 0x00 */   new NOP()
/* 0x01 */ , new Number16bitToRegLD(Memory::Register::BC)
/* 0x02 */ , new NormalLD(Memory::Register::BC, Memory::Register::A)
/* 0x03 */ , new IncDec16BitAI(Memory::Register::BC, true)
/* 0x04 */ , new IncAI(Memory::Register::B)
/* 0x05 */ , new DecAI(Memory::Register::B)
/* 0x06 */ , new NormalLD(Memory::Register::B, Memory::Register::A, true)
/* 0x07 */ , new Rotate(false, false, Memory::Register::A, true)
/* 0x08 */ , new DoubleByteLD(true, false)
/* 0x09 */ , new Add16BitsAI(Memory::Register::BC)
/* 0x0a */ , new NormalLD(Memory::Register::A, Memory::Register::BC)
/* 0x0b */ , new IncDec16BitAI(Memory::Register::BC, false)
/* 0x0c */ , new IncAI(Memory::Register::C)
/* 0x0d */ , new DecAI(Memory::Register::C)
/* 0x0e */ , new NormalLD(Memory::Register::C, Memory::Register::A, true)
/* 0x0f */ , new Rotate(true, false, Memory::Register::A, true)
/* 0x10 */ , new Stop()
/* 0x11 */ , new Number16bitToRegLD(Memory::Register::DE)
/* 0x12 */ , new NormalLD(Memory::Register::DE, Memory::Register::A)
/* 0x13 */ , new IncDec16BitAI(Memory::Register::DE, true)
/* 0x14 */ , new IncAI(Memory::Register::D)
/* 0x15 */ , new DecAI(Memory::Register::D)
/* 0x16 */ , new NormalLD(Memory::Register::D, Memory::Register::A, true)
/* 0x17 */ , new Rotate(false, true, Memory::Register::A, true)
/* 0x18 */ , new JumpCall(false, true, JumpCall::r8, JumpCall::INCONDITIONAL)
/* 0x19 */ , new Add16BitsAI(Memory::Register::DE)
/* 0x1a */ , new NormalLD(Memory::Register::A, Memory::Register::DE)
/* 0x1b */ , new IncDec16BitAI(Memory::Register::DE, false)
/* 0x1c */ , new IncAI(Memory::Register::E)
/* 0x1d */ , new DecAI(Memory::Register::E)
/* 0x1e */ , new NormalLD(Memory::Register::E, Memory::Register::A, true)
/* 0x1f */ , new Rotate(true, true, Memory::Register::A, true)
/* 0x20 */ , new JumpCall(false, true, JumpCall::r8, JumpCall::NZ)
/* 0x21 */ , new Number16bitToRegLD(Memory::Register::HL)
/* 0x22 */ , new HLIterateLD(false, true)
/* 0x23 */ , new IncDec16BitAI(Memory::Register::HL, true)
/* 0x24 */ , new IncAI(Memory::Register::H)
/* 0x25 */ , new DecAI(Memory::Register::H)
/* 0x26 */ , new NormalLD(Memory::Register::H, Memory::Register::A, true)
/* 0x27 */ , new DecimalAdjustAI()
/* 0x28 */ , new JumpCall(false, true, JumpCall::r8, JumpCall::Z)
/* 0x29 */ , new Add16BitsAI(Memory::Register::HL)
/* 0x2a */ , new HLIterateLD(true, true)
/* 0x2b */ , new IncDec16BitAI(Memory::Register::HL, false)
/* 0x2c */ , new IncAI(Memory::Register::L)
/* 0x2d */ , new DecAI(Memory::Register::L)
/* 0x2e */ , new NormalLD(Memory::Register::L, Memory::Register::A, true)
/* 0x2f */ , new CompAAI()
/* 0x30 */ , new JumpCall(false, true, JumpCall::r8, JumpCall::NC)
/* 0x31 */ , new Number16bitToRegLD(Memory::Register::SP)
/* 0x32 */ , new HLIterateLD(false, false)
/* 0x33 */ , new IncDec16BitAI(Memory::Register::SP, true)
/* 0x34 */ , new IncAI(Memory::Register::HL)
/* 0x35 */ , new DecAI(Memory::Register::HL)
/* 0x36 */ , new NormalLD(Memory::Register::HL, Memory::Register::A, true)
/* 0x37 */ , new ChangeCFlagAI(false)
/* 0x38 */ , new JumpCall(false, true, JumpCall::r8, JumpCall::C)
/* 0x39 */ , new Add16BitsAI(Memory::Register::SP)
/* 0x3a */ , new HLIterateLD(true, false)
/* 0x3b */ , new IncDec16BitAI(Memory::Register::SP, false)
/* 0x3c */ , new IncAI(Memory::Register::A)
/* 0x3d */ , new DecAI(Memory::Register::A)
/* 0x3e */ , new NormalLD(Memory::Register::A, Memory::Register::A, true)
/* 0x3f */ , new ChangeCFlagAI(true)
/* 0x40 */ , new NormalLD(Memory::Register::B, Memory::Register::B)
/* 0x41 */ , new NormalLD(Memory::Register::B, Memory::Register::C)
/* 0x42 */ , new NormalLD(Memory::Register::B, Memory::Register::D)
/* 0x43 */ , new NormalLD(Memory::Register::B, Memory::Register::E)
/* 0x44 */ , new NormalLD(Memory::Register::B, Memory::Register::H)
/* 0x45 */ , new NormalLD(Memory::Register::B, Memory::Register::L)
/* 0x46 */ , new NormalLD(Memory::Register::B, Memory::Register::HL)
/* 0x47 */ , new NormalLD(Memory::Register::B, Memory::Register::A)
/* 0x48 */ , new NormalLD(Memory::Register::C, Memory::Register::B)
/* 0x49 */ , new NormalLD(Memory::Register::C, Memory::Register::C)
/* 0x4a */ , new NormalLD(Memory::Register::C, Memory::Register::D)
/* 0x4b */ , new NormalLD(Memory::Register::C, Memory::Register::E)
/* 0x4c */ , new NormalLD(Memory::Register::C, Memory::Register::H)
/* 0x4d */ , new NormalLD(Memory::Register::C, Memory::Register::L)
/* 0x4e */ , new NormalLD(Memory::Register::C, Memory::Register::HL)
/* 0x4f */ , new NormalLD(Memory::Register::C, Memory::Register::A)
/* 0x50 */ , new NormalLD(Memory::Register::D, Memory::Register::B)
/* 0x51 */ , new NormalLD(Memory::Register::D, Memory::Register::C)
/* 0x52 */ , new NormalLD(Memory::Register::D, Memory::Register::D)
/* 0x53 */ , new NormalLD(Memory::Register::D, Memory::Register::E)
/* 0x54 */ , new NormalLD(Memory::Register::D, Memory::Register::H)
/* 0x55 */ , new NormalLD(Memory::Register::D, Memory::Register::L)
/* 0x56 */ , new NormalLD(Memory::Register::D, Memory::Register::HL)
/* 0x57 */ , new NormalLD(Memory::Register::D, Memory::Register::A)
/* 0x58 */ , new NormalLD(Memory::Register::E, Memory::Register::B)
/* 0x59 */ , new NormalLD(Memory::Register::E, Memory::Register::C)
/* 0x5a */ , new NormalLD(Memory::Register::E, Memory::Register::D)
/* 0x5b */ , new NormalLD(Memory::Register::E, Memory::Register::E)
/* 0x5c */ , new NormalLD(Memory::Register::E, Memory::Register::H)
/* 0x5d */ , new NormalLD(Memory::Register::E, Memory::Register::L)
/* 0x5e */ , new NormalLD(Memory::Register::E, Memory::Register::HL)
/* 0x5f */ , new NormalLD(Memory::Register::E, Memory::Register::A)
/* 0x60 */ , new NormalLD(Memory::Register::H, Memory::Register::B)
/* 0x61 */ , new NormalLD(Memory::Register::H, Memory::Register::C)
/* 0x62 */ , new NormalLD(Memory::Register::H, Memory::Register::D)
/* 0x63 */ , new NormalLD(Memory::Register::H, Memory::Register::E)
/* 0x64 */ , new NormalLD(Memory::Register::H, Memory::Register::H)
/* 0x65 */ , new NormalLD(Memory::Register::H, Memory::Register::L)
/* 0x66 */ , new NormalLD(Memory::Register::H, Memory::Register::HL)
/* 0x67 */ , new NormalLD(Memory::Register::H, Memory::Register::A)
/* 0x68 */ , new NormalLD(Memory::Register::L, Memory::Register::B)
/* 0x69 */ , new NormalLD(Memory::Register::L, Memory::Register::C)
/* 0x6a */ , new NormalLD(Memory::Register::L, Memory::Register::D)
/* 0x6b */ , new NormalLD(Memory::Register::L, Memory::Register::E)
/* 0x6c */ , new NormalLD(Memory::Register::L, Memory::Register::H)
/* 0x6d */ , new NormalLD(Memory::Register::L, Memory::Register::L)
/* 0x6e */ , new NormalLD(Memory::Register::L, Memory::Register::HL)
/* 0x6f */ , new NormalLD(Memory::Register::L, Memory::Register::A)
/* 0x70 */ , new NormalLD(Memory::Register::HL, Memory::Register::B)
/* 0x71 */ , new NormalLD(Memory::Register::HL, Memory::Register::C)
/* 0x72 */ , new NormalLD(Memory::Register::HL, Memory::Register::D)
/* 0x73 */ , new NormalLD(Memory::Register::HL, Memory::Register::E)
/* 0x74 */ , new NormalLD(Memory::Register::HL, Memory::Register::H)
/* 0x75 */ , new NormalLD(Memory::Register::HL, Memory::Register::L)
/* 0x76 */ , new Halt()
/* 0x77 */ , new NormalLD(Memory::Register::HL, Memory::Register::A)
/* 0x78 */ , new NormalLD(Memory::Register::A, Memory::Register::B)
/* 0x79 */ , new NormalLD(Memory::Register::A, Memory::Register::C)
/* 0x7a */ , new NormalLD(Memory::Register::A, Memory::Register::D)
/* 0x7b */ , new NormalLD(Memory::Register::A, Memory::Register::E)
/* 0x7c */ , new NormalLD(Memory::Register::A, Memory::Register::H)
/* 0x7d */ , new NormalLD(Memory::Register::A, Memory::Register::L)
/* 0x7e */ , new NormalLD(Memory::Register::A, Memory::Register::HL)
/* 0x7f */ , new NormalLD(Memory::Register::A, Memory::Register::A)
/* 0x80 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::ADD, true)
/* 0x81 */ , new ArithmeticOperationAI(Memory::Register::C, ArithmeticOperationAI::ADD, true)
/* 0x82 */ , new ArithmeticOperationAI(Memory::Register::D, ArithmeticOperationAI::ADD, true)
/* 0x83 */ , new ArithmeticOperationAI(Memory::Register::E, ArithmeticOperationAI::ADD, true)
/* 0x84 */ , new ArithmeticOperationAI(Memory::Register::H, ArithmeticOperationAI::ADD, true)
/* 0x85 */ , new ArithmeticOperationAI(Memory::Register::L, ArithmeticOperationAI::ADD, true)
/* 0x86 */ , new ArithmeticOperationAI(Memory::Register::HL, ArithmeticOperationAI::ADD, true)
/* 0x87 */ , new ArithmeticOperationAI(Memory::Register::A, ArithmeticOperationAI::ADD, true)
/* 0x88 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::ADC, true)
/* 0x89 */ , new ArithmeticOperationAI(Memory::Register::C, ArithmeticOperationAI::ADC, true)
/* 0x8a */ , new ArithmeticOperationAI(Memory::Register::D, ArithmeticOperationAI::ADC, true)
/* 0x8b */ , new ArithmeticOperationAI(Memory::Register::E, ArithmeticOperationAI::ADC, true)
/* 0x8c */ , new ArithmeticOperationAI(Memory::Register::H, ArithmeticOperationAI::ADC, true)
/* 0x8d */ , new ArithmeticOperationAI(Memory::Register::L, ArithmeticOperationAI::ADC, true)
/* 0x8e */ , new ArithmeticOperationAI(Memory::Register::HL, ArithmeticOperationAI::ADC, true)
/* 0x8f */ , new ArithmeticOperationAI(Memory::Register::A, ArithmeticOperationAI::ADC, true)
/* 0x90 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::SUB, true)
/* 0x91 */ , new ArithmeticOperationAI(Memory::Register::C, ArithmeticOperationAI::SUB, true)
/* 0x92 */ , new ArithmeticOperationAI(Memory::Register::D, ArithmeticOperationAI::SUB, true)
/* 0x93 */ , new ArithmeticOperationAI(Memory::Register::E, ArithmeticOperationAI::SUB, true)
/* 0x94 */ , new ArithmeticOperationAI(Memory::Register::H, ArithmeticOperationAI::SUB, true)
/* 0x95 */ , new ArithmeticOperationAI(Memory::Register::L, ArithmeticOperationAI::SUB, true)
/* 0x96 */ , new ArithmeticOperationAI(Memory::Register::HL, ArithmeticOperationAI::SUB, true)
/* 0x97 */ , new ArithmeticOperationAI(Memory::Register::A, ArithmeticOperationAI::SUB, true)
/* 0x98 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::SBC, true)
/* 0x99 */ , new ArithmeticOperationAI(Memory::Register::C, ArithmeticOperationAI::SBC, true)
/* 0x9a */ , new ArithmeticOperationAI(Memory::Register::D, ArithmeticOperationAI::SBC, true)
/* 0x9b */ , new ArithmeticOperationAI(Memory::Register::E, ArithmeticOperationAI::SBC, true)
/* 0x9c */ , new ArithmeticOperationAI(Memory::Register::H, ArithmeticOperationAI::SBC, true)
/* 0x9d */ , new ArithmeticOperationAI(Memory::Register::L, ArithmeticOperationAI::SBC, true)
/* 0x9e */ , new ArithmeticOperationAI(Memory::Register::HL, ArithmeticOperationAI::SBC, true)
/* 0x9f */ , new ArithmeticOperationAI(Memory::Register::A, ArithmeticOperationAI::SBC, true)
/* 0xa0 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::AND, true)
/* 0xa1 */ , new ArithmeticOperationAI(Memory::Register::C, ArithmeticOperationAI::AND, true)
/* 0xa2 */ , new ArithmeticOperationAI(Memory::Register::D, ArithmeticOperationAI::AND, true)
/* 0xa3 */ , new ArithmeticOperationAI(Memory::Register::E, ArithmeticOperationAI::AND, true)
/* 0xa4 */ , new ArithmeticOperationAI(Memory::Register::H, ArithmeticOperationAI::AND, true)
/* 0xa5 */ , new ArithmeticOperationAI(Memory::Register::L, ArithmeticOperationAI::AND, true)
/* 0xa6 */ , new ArithmeticOperationAI(Memory::Register::HL, ArithmeticOperationAI::AND, true)
/* 0xa7 */ , new ArithmeticOperationAI(Memory::Register::A, ArithmeticOperationAI::AND, true)
/* 0xa8 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::XOR, true)
/* 0xa9 */ , new ArithmeticOperationAI(Memory::Register::C, ArithmeticOperationAI::XOR, true)
/* 0xaa */ , new ArithmeticOperationAI(Memory::Register::D, ArithmeticOperationAI::XOR, true)
/* 0xab */ , new ArithmeticOperationAI(Memory::Register::E, ArithmeticOperationAI::XOR, true)
/* 0xac */ , new ArithmeticOperationAI(Memory::Register::H, ArithmeticOperationAI::XOR, true)
/* 0xad */ , new ArithmeticOperationAI(Memory::Register::L, ArithmeticOperationAI::XOR, true)
/* 0xae */ , new ArithmeticOperationAI(Memory::Register::HL, ArithmeticOperationAI::XOR, true)
/* 0xaf */ , new ArithmeticOperationAI(Memory::Register::A, ArithmeticOperationAI::XOR, true)
/* 0xb0 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::OR, true)
/* 0xb1 */ , new ArithmeticOperationAI(Memory::Register::C, ArithmeticOperationAI::OR, true)
/* 0xb2 */ , new ArithmeticOperationAI(Memory::Register::D, ArithmeticOperationAI::OR, true)
/* 0xb3 */ , new ArithmeticOperationAI(Memory::Register::E, ArithmeticOperationAI::OR, true)
/* 0xb4 */ , new ArithmeticOperationAI(Memory::Register::H, ArithmeticOperationAI::OR, true)
/* 0xb5 */ , new ArithmeticOperationAI(Memory::Register::L, ArithmeticOperationAI::OR, true)
/* 0xb6 */ , new ArithmeticOperationAI(Memory::Register::HL, ArithmeticOperationAI::OR, true)
/* 0xb7 */ , new ArithmeticOperationAI(Memory::Register::A, ArithmeticOperationAI::OR, true)
/* 0xb8 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::CP, true)
/* 0xb9 */ , new ArithmeticOperationAI(Memory::Register::C, ArithmeticOperationAI::CP, true)
/* 0xba */ , new ArithmeticOperationAI(Memory::Register::D, ArithmeticOperationAI::CP, true)
/* 0xbb */ , new ArithmeticOperationAI(Memory::Register::E, ArithmeticOperationAI::CP, true)
/* 0xbc */ , new ArithmeticOperationAI(Memory::Register::H, ArithmeticOperationAI::CP, true)
/* 0xbd */ , new ArithmeticOperationAI(Memory::Register::L, ArithmeticOperationAI::CP, true)
/* 0xbe */ , new ArithmeticOperationAI(Memory::Register::HL, ArithmeticOperationAI::CP, true)
/* 0xbf */ , new ArithmeticOperationAI(Memory::Register::A, ArithmeticOperationAI::CP, true)
/* 0xc0 */ , new Return(false, Return::Source::SP, Return::Type::NZ)
/* 0xc1 */ , new PopLD(Memory::Register::BC)
/* 0xc2 */ , new JumpCall(false, false, JumpCall::a16, JumpCall::NZ)
/* 0xc3 */ , new JumpCall(false, false, JumpCall::a16, JumpCall::INCONDITIONAL)
/* 0xc4 */ , new JumpCall(true, false, JumpCall::a16, JumpCall::NZ)
/* 0xc5 */ , new PushLD(Memory::Register::BC)
/* 0xc6 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::ADD, false)
/* 0xc7 */ , new Return(false, Return::Source::_00H, Return::Type::INCONDITIONAL)
/* 0xc8 */ , new Return(false, Return::Source::SP, Return::Type::Z)
/* 0xc9 */ , new Return(false, Return::Source::SP, Return::Type::INCONDITIONAL)
/* 0xca */ , new JumpCall(false, false, JumpCall::a16, JumpCall::Z)
/* 0xcb */ , new InvalidInstruction()
/* 0xcc */ , new JumpCall(true, false, JumpCall::a16, JumpCall::Z)
/* 0xcd */ , new JumpCall(true, false, JumpCall::a16, JumpCall::INCONDITIONAL)
/* 0xce */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::ADC, false)
/* 0xcf */ , new Return(false, Return::Source::_08H, Return::Type::INCONDITIONAL)
/* 0xd0 */ , new Return(false, Return::Source::SP, Return::Type::NC)
/* 0xd1 */ , new PopLD(Memory::Register::DE)
/* 0xd2 */ , new JumpCall(false, false, JumpCall::a16, JumpCall::NC)
/* 0xd3 */ , new InvalidInstruction()
/* 0xd4 */ , new JumpCall(true, false, JumpCall::a16, JumpCall::NC)
/* 0xd5 */ , new PushLD(Memory::Register::DE)
/* 0xd6 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::SUB, false)
/* 0xd7 */ , new Return(false, Return::Source::_10H, Return::Type::INCONDITIONAL)
/* 0xd8 */ , new Return(false, Return::Source::SP, Return::Type::C)
/* 0xd9 */ , new Return(true, Return::Source::SP, Return::Type::INCONDITIONAL)
/* 0xda */ , new JumpCall(false, false, JumpCall::a16, JumpCall::C)
/* 0xdb */ , new InvalidInstruction()
/* 0xdc */ , new JumpCall(true, false, JumpCall::a16, JumpCall::C)
/* 0xdd */ , new InvalidInstruction()
/* 0xde */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::SBC, false)
/* 0xdf */ , new Return(false, Return::Source::_18H, Return::Type::INCONDITIONAL)
/* 0xe0 */ , new FF00LD(true, false)
/* 0xe1 */ , new PopLD(Memory::Register::HL)
/* 0xe2 */ , new FF00LD(true, true)
/* 0xe3 */ , new InvalidInstruction()
/* 0xe4 */ , new InvalidInstruction()
/* 0xe5 */ , new PushLD(Memory::Register::HL)
/* 0xe6 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::AND, false)
/* 0xe7 */ , new Return(false, Return::Source::_20H, Return::Type::INCONDITIONAL)
/* 0xe8 */ , new ADDr8SPAI()
/* 0xe9 */ , new JumpCall(false, false, JumpCall::Source::HL, JumpCall::Type::INCONDITIONAL)
/* 0xea */ , new DoubleByteLD(true)
/* 0xeb */ , new InvalidInstruction()
/* 0xec */ , new InvalidInstruction()
/* 0xed */ , new InvalidInstruction()
/* 0xee */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::XOR, false)
/* 0xef */ , new Return(false, Return::Source::_28H, Return::Type::INCONDITIONAL)
/* 0xf0 */ , new FF00LD(false, false)
/* 0xf1 */ , new PopLD(Memory::Register::AF)
/* 0xf2 */ , new FF00LD(false, true)
/* 0xf3 */ , new InterruptionED(false)
/* 0xf4 */ , new InvalidInstruction()
/* 0xf5 */ , new PushLD(Memory::Register::AF)
/* 0xf6 */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::OR, false)
/* 0xf7 */ , new Return(false, Return::Source::_30H, Return::Type::INCONDITIONAL)
/* 0xf8 */ , new InstructionF8LD()
/* 0xf9 */ , new NormalLD(Memory::Register::SP, Memory::Register::HL)
/* 0xfa */ , new DoubleByteLD(false)
/* 0xfb */ , new InterruptionED(true)
/* 0xfc */ , new InvalidInstruction()
/* 0xfd */ , new InvalidInstruction()
/* 0xfe */ , new ArithmeticOperationAI(Memory::Register::B, ArithmeticOperationAI::CP, false)
/* 0xff */ , new Return(false, Return::Source::_38H, Return::Type::INCONDITIONAL)
};

// subset for the instruction 0xCB
Instruction* CB_subset [0x100] =
{
/* 0x00 */   new Rotate(false, false, Memory::Register::B, false)
/* 0x01 */ , new Rotate(false, false, Memory::Register::C, false)
/* 0x02 */ , new Rotate(false, false, Memory::Register::D, false)
/* 0x03 */ , new Rotate(false, false, Memory::Register::E, false)
/* 0x04 */ , new Rotate(false, false, Memory::Register::H, false)
/* 0x05 */ , new Rotate(false, false, Memory::Register::L, false)
/* 0x06 */ , new Rotate(false, false, Memory::Register::HL, false)
/* 0x07 */ , new Rotate(false, false, Memory::Register::A, false)
/* 0x08 */ , new Rotate(true, false, Memory::Register::B, false)
/* 0x09 */ , new Rotate(true, false, Memory::Register::C, false)
/* 0x0a */ , new Rotate(true, false, Memory::Register::D, false)
/* 0x0b */ , new Rotate(true, false, Memory::Register::E, false)
/* 0x0c */ , new Rotate(true, false, Memory::Register::H, false)
/* 0x0d */ , new Rotate(true, false, Memory::Register::L, false)
/* 0x0e */ , new Rotate(true, false, Memory::Register::HL, false)
/* 0x0f */ , new Rotate(true, false, Memory::Register::A, false)
/* 0x10 */ , new Rotate(false, true, Memory::Register::B, false)
/* 0x11 */ , new Rotate(false, true, Memory::Register::C, false)
/* 0x12 */ , new Rotate(false, true, Memory::Register::D, false)
/* 0x13 */ , new Rotate(false, true, Memory::Register::E, false)
/* 0x14 */ , new Rotate(false, true, Memory::Register::H, false)
/* 0x15 */ , new Rotate(false, true, Memory::Register::L, false)
/* 0x16 */ , new Rotate(false, true, Memory::Register::HL, false)
/* 0x17 */ , new Rotate(false, true, Memory::Register::A, false)
/* 0x18 */ , new Rotate(true, true, Memory::Register::B, false)
/* 0x19 */ , new Rotate(true, true, Memory::Register::C, false)
/* 0x1a */ , new Rotate(true, true, Memory::Register::D, false)
/* 0x1b */ , new Rotate(true, true, Memory::Register::E, false)
/* 0x1c */ , new Rotate(true, true, Memory::Register::H, false)
/* 0x1d */ , new Rotate(true, true, Memory::Register::L, false)
/* 0x1e */ , new Rotate(true, true, Memory::Register::HL, false)
/* 0x1f */ , new Rotate(true, true, Memory::Register::A, false)
/* 0x20 */ , new Shift(false, Memory::Register::B, false)
/* 0x21 */ , new Shift(false, Memory::Register::C, false)
/* 0x22 */ , new Shift(false, Memory::Register::D, false)
/* 0x23 */ , new Shift(false, Memory::Register::E, false)
/* 0x24 */ , new Shift(false, Memory::Register::H, false)
/* 0x25 */ , new Shift(false, Memory::Register::L, false)
/* 0x26 */ , new Shift(false, Memory::Register::HL, false)
/* 0x27 */ , new Shift(false, Memory::Register::A, false)
/* 0x28 */ , new Shift(true, Memory::Register::B, false)
/* 0x29 */ , new Shift(true, Memory::Register::C, false)
/* 0x2a */ , new Shift(true, Memory::Register::D, false)
/* 0x2b */ , new Shift(true, Memory::Register::E, false)
/* 0x2c */ , new Shift(true, Memory::Register::H, false)
/* 0x2d */ , new Shift(true, Memory::Register::L, false)
/* 0x2e */ , new Shift(true, Memory::Register::HL, false)
/* 0x2f */ , new Shift(true, Memory::Register::A, false)
/* 0x30 */ , new Swap(Memory::Register::B)
/* 0x31 */ , new Swap(Memory::Register::C)
/* 0x32 */ , new Swap(Memory::Register::D)
/* 0x33 */ , new Swap(Memory::Register::E)
/* 0x34 */ , new Swap(Memory::Register::H)
/* 0x35 */ , new Swap(Memory::Register::L)
/* 0x36 */ , new Swap(Memory::Register::HL)
/* 0x37 */ , new Swap(Memory::Register::A)
/* 0x38 */ , new Shift(true, Memory::Register::B, true)
/* 0x39 */ , new Shift(true, Memory::Register::C, true)
/* 0x3a */ , new Shift(true, Memory::Register::D, true)
/* 0x3b */ , new Shift(true, Memory::Register::E, true)
/* 0x3c */ , new Shift(true, Memory::Register::H, true)
/* 0x3d */ , new Shift(true, Memory::Register::L, true)
/* 0x3e */ , new Shift(true, Memory::Register::HL, true)
/* 0x3f */ , new Shift(true, Memory::Register::A, true)
/* 0x40 */ , new Bit(Memory::Register::B, 0)
/* 0x41 */ , new Bit(Memory::Register::C, 0)
/* 0x42 */ , new Bit(Memory::Register::D, 0)
/* 0x43 */ , new Bit(Memory::Register::E, 0)
/* 0x44 */ , new Bit(Memory::Register::H, 0)
/* 0x45 */ , new Bit(Memory::Register::L, 0)
/* 0x46 */ , new Bit(Memory::Register::HL, 0)
/* 0x47 */ , new Bit(Memory::Register::A, 0)
/* 0x48 */ , new Bit(Memory::Register::B, 1)
/* 0x49 */ , new Bit(Memory::Register::C, 1)
/* 0x4a */ , new Bit(Memory::Register::D, 1)
/* 0x4b */ , new Bit(Memory::Register::E, 1)
/* 0x4c */ , new Bit(Memory::Register::H, 1)
/* 0x4d */ , new Bit(Memory::Register::L, 1)
/* 0x4e */ , new Bit(Memory::Register::HL, 1)
/* 0x4f */ , new Bit(Memory::Register::A, 1)
/* 0x50 */ , new Bit(Memory::Register::B, 2)
/* 0x51 */ , new Bit(Memory::Register::C, 2)
/* 0x52 */ , new Bit(Memory::Register::D, 2)
/* 0x53 */ , new Bit(Memory::Register::E, 2)
/* 0x54 */ , new Bit(Memory::Register::H, 2)
/* 0x55 */ , new Bit(Memory::Register::L, 2)
/* 0x56 */ , new Bit(Memory::Register::HL, 2)
/* 0x57 */ , new Bit(Memory::Register::A, 2)
/* 0x58 */ , new Bit(Memory::Register::B, 3)
/* 0x59 */ , new Bit(Memory::Register::C, 3)
/* 0x5a */ , new Bit(Memory::Register::D, 3)
/* 0x5b */ , new Bit(Memory::Register::E, 3)
/* 0x5c */ , new Bit(Memory::Register::H, 3)
/* 0x5d */ , new Bit(Memory::Register::L, 3)
/* 0x5e */ , new Bit(Memory::Register::HL, 3)
/* 0x5f */ , new Bit(Memory::Register::A, 3)
/* 0x60 */ , new Bit(Memory::Register::B, 4)
/* 0x61 */ , new Bit(Memory::Register::C, 4)
/* 0x62 */ , new Bit(Memory::Register::D, 4)
/* 0x63 */ , new Bit(Memory::Register::E, 4)
/* 0x64 */ , new Bit(Memory::Register::H, 4)
/* 0x65 */ , new Bit(Memory::Register::L, 4)
/* 0x66 */ , new Bit(Memory::Register::HL, 4)
/* 0x67 */ , new Bit(Memory::Register::A, 4)
/* 0x68 */ , new Bit(Memory::Register::B, 5)
/* 0x69 */ , new Bit(Memory::Register::C, 5)
/* 0x6a */ , new Bit(Memory::Register::D, 5)
/* 0x6b */ , new Bit(Memory::Register::E, 5)
/* 0x6c */ , new Bit(Memory::Register::H, 5)
/* 0x6d */ , new Bit(Memory::Register::L, 5)
/* 0x6e */ , new Bit(Memory::Register::HL, 5)
/* 0x6f */ , new Bit(Memory::Register::A, 5)
/* 0x70 */ , new Bit(Memory::Register::B, 6)
/* 0x71 */ , new Bit(Memory::Register::C, 6)
/* 0x72 */ , new Bit(Memory::Register::D, 6)
/* 0x73 */ , new Bit(Memory::Register::E, 6)
/* 0x74 */ , new Bit(Memory::Register::H, 6)
/* 0x75 */ , new Bit(Memory::Register::L, 6)
/* 0x76 */ , new Bit(Memory::Register::HL, 6)
/* 0x77 */ , new Bit(Memory::Register::A, 6)
/* 0x78 */ , new Bit(Memory::Register::B, 7)
/* 0x79 */ , new Bit(Memory::Register::C, 7)
/* 0x7a */ , new Bit(Memory::Register::D, 7)
/* 0x7b */ , new Bit(Memory::Register::E, 7)
/* 0x7c */ , new Bit(Memory::Register::H, 7)
/* 0x7d */ , new Bit(Memory::Register::L, 7)
/* 0x7e */ , new Bit(Memory::Register::HL, 7)
/* 0x7f */ , new Bit(Memory::Register::A, 7)
/* 0x80 */ , new SetResetBit(Memory::Register::B, 0, false)
/* 0x81 */ , new SetResetBit(Memory::Register::C, 0, false)
/* 0x82 */ , new SetResetBit(Memory::Register::D, 0, false)
/* 0x83 */ , new SetResetBit(Memory::Register::E, 0, false)
/* 0x84 */ , new SetResetBit(Memory::Register::H, 0, false)
/* 0x85 */ , new SetResetBit(Memory::Register::L, 0, false)
/* 0x86 */ , new SetResetBit(Memory::Register::HL, 0, false)
/* 0x87 */ , new SetResetBit(Memory::Register::A, 0, false)
/* 0x88 */ , new SetResetBit(Memory::Register::B, 1, false)
/* 0x89 */ , new SetResetBit(Memory::Register::C, 1, false)
/* 0x8a */ , new SetResetBit(Memory::Register::D, 1, false)
/* 0x8b */ , new SetResetBit(Memory::Register::E, 1, false)
/* 0x8c */ , new SetResetBit(Memory::Register::H, 1, false)
/* 0x8d */ , new SetResetBit(Memory::Register::L, 1, false)
/* 0x8e */ , new SetResetBit(Memory::Register::HL, 1, false)
/* 0x8f */ , new SetResetBit(Memory::Register::A, 1, false)
/* 0x90 */ , new SetResetBit(Memory::Register::B, 2, false)
/* 0x91 */ , new SetResetBit(Memory::Register::C, 2, false)
/* 0x92 */ , new SetResetBit(Memory::Register::D, 2, false)
/* 0x93 */ , new SetResetBit(Memory::Register::E, 2, false)
/* 0x94 */ , new SetResetBit(Memory::Register::H, 2, false)
/* 0x95 */ , new SetResetBit(Memory::Register::L, 2, false)
/* 0x96 */ , new SetResetBit(Memory::Register::HL, 2, false)
/* 0x97 */ , new SetResetBit(Memory::Register::A, 2, false)
/* 0x98 */ , new SetResetBit(Memory::Register::B, 3, false)
/* 0x99 */ , new SetResetBit(Memory::Register::C, 3, false)
/* 0x9a */ , new SetResetBit(Memory::Register::D, 3, false)
/* 0x9b */ , new SetResetBit(Memory::Register::E, 3, false)
/* 0x9c */ , new SetResetBit(Memory::Register::H, 3, false)
/* 0x9d */ , new SetResetBit(Memory::Register::L, 3, false)
/* 0x9e */ , new SetResetBit(Memory::Register::HL, 3, false)
/* 0x9f */ , new SetResetBit(Memory::Register::A, 3, false)
/* 0xa0 */ , new SetResetBit(Memory::Register::B, 4, false)
/* 0xa1 */ , new SetResetBit(Memory::Register::C, 4, false)
/* 0xa2 */ , new SetResetBit(Memory::Register::D, 4, false)
/* 0xa3 */ , new SetResetBit(Memory::Register::E, 4, false)
/* 0xa4 */ , new SetResetBit(Memory::Register::H, 4, false)
/* 0xa5 */ , new SetResetBit(Memory::Register::L, 4, false)
/* 0xa6 */ , new SetResetBit(Memory::Register::HL, 4, false)
/* 0xa7 */ , new SetResetBit(Memory::Register::A, 4, false)
/* 0xa8 */ , new SetResetBit(Memory::Register::B, 5, false)
/* 0xa9 */ , new SetResetBit(Memory::Register::C, 5, false)
/* 0xaa */ , new SetResetBit(Memory::Register::D, 5, false)
/* 0xab */ , new SetResetBit(Memory::Register::E, 5, false)
/* 0xac */ , new SetResetBit(Memory::Register::H, 5, false)
/* 0xad */ , new SetResetBit(Memory::Register::L, 5, false)
/* 0xae */ , new SetResetBit(Memory::Register::HL, 5, false)
/* 0xaf */ , new SetResetBit(Memory::Register::A, 5, false)
/* 0xb0 */ , new SetResetBit(Memory::Register::B, 6, false)
/* 0xb1 */ , new SetResetBit(Memory::Register::C, 6, false)
/* 0xb2 */ , new SetResetBit(Memory::Register::D, 6, false)
/* 0xb3 */ , new SetResetBit(Memory::Register::E, 6, false)
/* 0xb4 */ , new SetResetBit(Memory::Register::H, 6, false)
/* 0xb5 */ , new SetResetBit(Memory::Register::L, 6, false)
/* 0xb6 */ , new SetResetBit(Memory::Register::HL, 6, false)
/* 0xb7 */ , new SetResetBit(Memory::Register::A, 6, false)
/* 0xb8 */ , new SetResetBit(Memory::Register::B, 7, false)
/* 0xb9 */ , new SetResetBit(Memory::Register::C, 7, false)
/* 0xba */ , new SetResetBit(Memory::Register::D, 7, false)
/* 0xbb */ , new SetResetBit(Memory::Register::E, 7, false)
/* 0xbc */ , new SetResetBit(Memory::Register::H, 7, false)
/* 0xbd */ , new SetResetBit(Memory::Register::L, 7, false)
/* 0xbe */ , new SetResetBit(Memory::Register::HL, 7, false)
/* 0xbf */ , new SetResetBit(Memory::Register::A, 7, false)
/* 0xc0 */ , new SetResetBit(Memory::Register::B, 0, true)
/* 0xc1 */ , new SetResetBit(Memory::Register::C, 0, true)
/* 0xc2 */ , new SetResetBit(Memory::Register::D, 0, true)
/* 0xc3 */ , new SetResetBit(Memory::Register::E, 0, true)
/* 0xc4 */ , new SetResetBit(Memory::Register::H, 0, true)
/* 0xc5 */ , new SetResetBit(Memory::Register::L, 0, true)
/* 0xc6 */ , new SetResetBit(Memory::Register::HL, 0, true)
/* 0xc7 */ , new SetResetBit(Memory::Register::A, 0, true)
/* 0xc8 */ , new SetResetBit(Memory::Register::B, 1, true)
/* 0xc9 */ , new SetResetBit(Memory::Register::C, 1, true)
/* 0xca */ , new SetResetBit(Memory::Register::D, 1, true)
/* 0xcb */ , new SetResetBit(Memory::Register::E, 1, true)
/* 0xcc */ , new SetResetBit(Memory::Register::H, 1, true)
/* 0xcd */ , new SetResetBit(Memory::Register::L, 1, true)
/* 0xce */ , new SetResetBit(Memory::Register::HL, 1, true)
/* 0xcf */ , new SetResetBit(Memory::Register::A, 1, true)
/* 0xd0 */ , new SetResetBit(Memory::Register::B, 2, true)
/* 0xd1 */ , new SetResetBit(Memory::Register::C, 2, true)
/* 0xd2 */ , new SetResetBit(Memory::Register::D, 2, true)
/* 0xd3 */ , new SetResetBit(Memory::Register::E, 2, true)
/* 0xd4 */ , new SetResetBit(Memory::Register::H, 2, true)
/* 0xd5 */ , new SetResetBit(Memory::Register::L, 2, true)
/* 0xd6 */ , new SetResetBit(Memory::Register::HL, 2, true)
/* 0xd7 */ , new SetResetBit(Memory::Register::A, 2, true)
/* 0xd8 */ , new SetResetBit(Memory::Register::B, 3, true)
/* 0xd9 */ , new SetResetBit(Memory::Register::C, 3, true)
/* 0xda */ , new SetResetBit(Memory::Register::D, 3, true)
/* 0xdb */ , new SetResetBit(Memory::Register::E, 3, true)
/* 0xdc */ , new SetResetBit(Memory::Register::H, 3, true)
/* 0xdd */ , new SetResetBit(Memory::Register::L, 3, true)
/* 0xde */ , new SetResetBit(Memory::Register::HL, 3, true)
/* 0xdf */ , new SetResetBit(Memory::Register::A, 3, true)
/* 0xe0 */ , new SetResetBit(Memory::Register::B, 4, true)
/* 0xe1 */ , new SetResetBit(Memory::Register::C, 4, true)
/* 0xe2 */ , new SetResetBit(Memory::Register::D, 4, true)
/* 0xe3 */ , new SetResetBit(Memory::Register::E, 4, true)
/* 0xe4 */ , new SetResetBit(Memory::Register::H, 4, true)
/* 0xe5 */ , new SetResetBit(Memory::Register::L, 4, true)
/* 0xe6 */ , new SetResetBit(Memory::Register::HL, 4, true)
/* 0xe7 */ , new SetResetBit(Memory::Register::A, 4, true)
/* 0xe8 */ , new SetResetBit(Memory::Register::B, 5, true)
/* 0xe9 */ , new SetResetBit(Memory::Register::C, 5, true)
/* 0xea */ , new SetResetBit(Memory::Register::D, 5, true)
/* 0xeb */ , new SetResetBit(Memory::Register::E, 5, true)
/* 0xec */ , new SetResetBit(Memory::Register::H, 5, true)
/* 0xed */ , new SetResetBit(Memory::Register::L, 5, true)
/* 0xee */ , new SetResetBit(Memory::Register::HL, 5, true)
/* 0xef */ , new SetResetBit(Memory::Register::A, 5, true)
/* 0xf0 */ , new SetResetBit(Memory::Register::B, 6, true)
/* 0xf1 */ , new SetResetBit(Memory::Register::C, 6, true)
/* 0xf2 */ , new SetResetBit(Memory::Register::D, 6, true)
/* 0xf3 */ , new SetResetBit(Memory::Register::E, 6, true)
/* 0xf4 */ , new SetResetBit(Memory::Register::H, 6, true)
/* 0xf5 */ , new SetResetBit(Memory::Register::L, 6, true)
/* 0xf6 */ , new SetResetBit(Memory::Register::HL, 6, true)
/* 0xf7 */ , new SetResetBit(Memory::Register::A, 6, true)
/* 0xf8 */ , new SetResetBit(Memory::Register::B, 7, true)
/* 0xf9 */ , new SetResetBit(Memory::Register::C, 7, true)
/* 0xfa */ , new SetResetBit(Memory::Register::D, 7, true)
/* 0xfb */ , new SetResetBit(Memory::Register::E, 7, true)
/* 0xfc */ , new SetResetBit(Memory::Register::H, 7, true)
/* 0xfd */ , new SetResetBit(Memory::Register::L, 7, true)
/* 0xfe */ , new SetResetBit(Memory::Register::HL, 7, true)
/* 0xff */ , new SetResetBit(Memory::Register::A, 7, true)
};

#endif